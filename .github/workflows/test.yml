# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

# https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-maven
name: Test

on:
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'liberica'
          server-id: central
          server-username: ${{ secrets.OSSRH_USERNAME }}
          server-password: ${{ secrets.OSSRH_PASSWORD }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Show settings.xml
        run: |
          cat ~/.m2/settings.xml

      - name: Show GPG
        run: |
          gpg -vvv --list-keys && gpg -vvv --list-secret-keys

      - name: Check version
        run: |
          # 获取 pom.xml 中的版本号，并去掉可能的 'v' 前缀
          POM_VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml | sed 's/^v//')
          # 获取最近的发布版本号
          RELEASE_VERSION=$(gh api repos/${{ github.repository }}/releases/latest | jq -r .tag_name | sed 's/^v//')
          echo "$POM_VERSION"
          echo "$RELEASE_VERSION"
          # 版本号对比
          if [ "$POM_VERSION" != "$RELEASE_VERSION" ]; then
            echo "Error: pom.xml version ($POM_VERSION) does not match the latest release version ($RELEASE_VERSION)."
            exit 1
          fi
